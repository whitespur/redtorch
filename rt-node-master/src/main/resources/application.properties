# spring.main.web-application-type=none
server.port=9099
logging.config=classpath:logback-spring.xml

# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
# 不要设置过大，如果过大，启动项目会报错：打开文件数过多
server.undertow.io-threads=16

# 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
# 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
server.undertow.worker-threads=256

# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
server.undertow.buffer-size=1024

# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
server.undertow.buffers-per-region=1024

# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers=true

rt.node.master.web.api-base-path=/api

rt.node.master.web.admin-password-sha-256=4351b40eb687f7860a65d5f6ee22b7d2ca1fbac0865ad8468c90f429c4b1ae94

rt.node.master.db.management.host=114.55.58.215
rt.node.master.db.management.port=27017
rt.node.master.db.management.username=airobot
rt.node.master.db.management.password=Unsd879h
rt.node.master.db.management.authdb=admin
rt.node.master.db.management.dbname=rasa
#rt.node.master.db.management.dbname=rt_management_db

rt.node.master.db.market-data.host=114.55.58.215
rt.node.master.db.market-data.port=27017
rt.node.master.db.market-data.username=airobot
rt.node.master.db.market-data.password=Unsd879h
rt.node.master.db.market-data.authdb=admin
rt.node.master.db.market-data.dbname=rasa

# 用于处理一般RPC的线程数
rt.rpc.server.threads-normal=20

rt.rpc.server.sync-default-timeout-seconds=10

rt.node.master.operatorId=c4b0ee8f-c60c-4e2b-bec7-814ccddead42
rt.node.slave.operatorId=c4b0ee8f-c60c-4e2b-bec7-814ccddead42 


#BlockingWaitStrategy 低效 低CPU
#SleepingWaitStrategy 对生产者影响较小
#YieldingWaitStrategy 高性能 ,适当CPU占用，建议开启BIOS超线程
#BusySpinWaitStrategy 高性能,高CPU占用,需要CPU实际物理核心数量高于FastEventDynamicHandler数量。建议最低使用多核物理机,关闭BIOS超线程!
rt.common.service.fast-event-wait-strategy=BlockingWaitStrategy